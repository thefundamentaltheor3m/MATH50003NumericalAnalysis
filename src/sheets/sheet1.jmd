# MATH50003 (2022–23)
# Problem Sheet 1
# Does this work?

This problem sheet tests the representation of numbers on the computer, using
modular arithmetic. 

**Problem 1** With 8-bit signed integers, find the bits for the following: $10, 120, -10$.


**Problem 2** What is $\pi$ to 5 binary places? Hint: recall that $\pi \approx  3.14$.


**Problem 3** What are the single precision $F_{32}$ (`Float32`) floating point representations for the following: 
$$
2, 31, 32, 23/4, (23/4)\times 2^{100}
$$


**Problem 4** Let $m(y) = \min\{x \in F_{32} : x > y \}$ be the smallest single precision number
greater than $y$. What is $m(2) - 2$ and $m(1024) - 1024$? Check your answer using the `nextfloat`
command.


**Problem 5** Suppose $x = 1.25$ and consider 16-bit floating point arithmetic (`Float16`). 
What is the error in approximating $x$ by the nearest float point number ${\rm fl}(x)$?
What is the error in approximating $2x$, $x/2$, $x + 2$ and $x - 2$ by $2 \otimes x$, $x \oslash 2$, $x ⊕ 2$ and $x \ominus 2$?

**Problem 6** For what floating point numbers is $x \oslash 2 \neq x/2$ and $x ⊕ 2 \neq x + 2$?


**Problem 7** Explain why the following return `true`. What is the largest floating point number `y` such that `y + 1 ≠ y`?
```julia
x = 10.0^100
x + 1 == x
```



**Problem 8** What are the exact bits for $1/5$, $1/5 + 1$ computed
using  half-precision arithmetic (`Float16`) (using default rounding)?



**Problem 9** Explain why the following does not return `1`. Can you compute the bits explicitly?
```julia
Float16(0.1) / (Float16(1.1) - 1)
```


**Problem 10** Find a bound on the _absolute error_ in terms of a constant times
$ϵ_{\rm m}$ for the following computations
$$
\begin{align*}
(1.1 * 1.2) &+ 1.3 \\
(1.1 - 1) &/ 0.1 
\end{align*}
$$
implemented using floating point arithmetic (with any precision). 




